{"version":3,"file":"simple-mask.directive.d.ts","sources":["simple-mask.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACC;AAAD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,AACA","sourcesContent":["import { Renderer2 } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { SimpleMask } from './../simple-mask';\nexport declare class SimpleMaskDirective extends SimpleMask {\n    private renderer;\n    ngControl?: NgControl | undefined;\n    mask: string;\n    clearIfNotMatch: boolean;\n    fillWithExpected: boolean;\n    constructor(renderer: Renderer2, ngControl?: NgControl | undefined);\n    onInput(event: KeyboardEvent): void;\n    onBlur(event: Event): void;\n    inputOnblur(event: Event): void;\n    addPatterns: any;\n    newPatterns: any;\n    /**\n     * write the new value on input element and form control\n     * @param value value to write\n     * @param target input element\n     */\n    private writeValue;\n    /**\n     * Checks if the value matches with the mask and is completed\n     * @param value value to check\n     * @returns true if match, false if not match\n     */\n    private matchMask;\n}\n"]}